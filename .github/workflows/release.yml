name: Release
on:
  push:
    tags: ["*"]
  workflow_dispatch:
  # pull_request: # for testing only

permissions:
  contents: write
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_REPO: ghcr.io/${{ github.repository }}

jobs:
  build-docker-image:
    name: Build Docker Image and extract files
    runs-on: "ubuntu-latest"
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout Sources
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: docker-builder
        uses: docker/setup-buildx-action@v3

      - name: Prepare Environment Variables
        run: |
          echo "HOME=$HOME" | tee -a $GITHUB_ENV
          echo "XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-$HOME/.config}" | tee -a $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::7}" | tee -a $GITHUB_ENV
          GIT_TAG=$(git tag --points-at HEAD)
          echo "GIT_TAG=$GIT_TAG" | tee -a $GITHUB_ENV
          GIT_BRANCH=$(git branch --show-current)
          echo "GIT_BRANCH=$GIT_BRANCH" | tee -a $GITHUB_ENV
          echo "REF_NAME=$(echo ${GIT_TAG:-$GITHUB_REF_NAME} | sed 's/[^a-zA-Z0-9._]/-/g')" | tee -a $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_REPO }}
          flavor: |
            prefix=
            suffix=
          tags: |
            type=sha,format=short,prefix=
            type=ref,event=branch
            type=ref,event=branch,suffix=-${{ github.run_number }}
            type=ref,event=tag
            type=raw,value=${{ env.REF_NAME }},enable=${{ github.event_name == 'pull_request' }}
            type=raw,value=${{ env.GIT_BRANCH }},enable=${{ env.GIT_BRANCH != '' }}
            type=raw,value=latest,enable=${{ env.GIT_BRANCH == 'master' }}

      - name: Build with cache and push images
        uses: docker/build-push-action@v5
        id: docker_build
        with:
          context: .
          builder: ${{ steps.docker-builder.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          provenance: false
          cache-from: |
            type=registry,ref=${{ env.IMAGE_REPO }}:latest
            type=registry,ref=${{ env.IMAGE_REPO }}:${{ env.REF_NAME }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}

  make-release:
    name: Make Release
    runs-on: "ubuntu-latest"
    needs: [build-docker-image]
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v4

      - name: Build Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: .github/changelog-builder.json
          ignorePreReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Make Release
        uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: |
            ${{ steps.changelog.outputs.changelog }}
          allowUpdates: true
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') || contains(github.ref, 'pre') }}
          draft: false
